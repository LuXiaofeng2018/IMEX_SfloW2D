%!PS-Adobe-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: 157x89mm 447 255 0 () ()
%%BoundingBox: 0 0 447 255
%%Pages: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font AsanaMath
%!FontType1-1.0: AsanaMath 001.003
11 dict begin
/FontType 1 def
/PaintType 0 def
/FontName /AsanaMath def
/UniqueID 4100001 def
/FontMatrix [0.001 0 0 0.001 0 0]readonly def
/FontBBox {-1230 -1803 4581 3175}readonly def
/FontInfo 2 dict dup begin
 /FullName (AsanaMath) readonly def
 /FamilyName (AsanaMath) readonly def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /k put
dup 2 /j put
readonly def
currentdict end
currentfile eexec
91834109c624c23c5b65ba449b72b0835fd1a457c7ebee5a1ad02bf421d14469
ab29d878bb858be0bac9c8bd3532987a63b46cf3b36a5d85aac681c8c7e69d26
efd7017d399e5cdff595fd3894fdf3f115375c88a9534dd3d25f46522f013bf3
71f539de1995c5901034ad6cf43b140bdf0087db28e7835e13c980af37676862
8f71cfe975a759d322a00e6fafbc206fb8ccd72604f6394cc9e3e71cd3ca867c
dab36d353391438d8435bb01a627cb459af1e14ea5fe0e8b7fab1a9f4eaa7fa1
23619134cd30e9a4118c8c71b801fecf2c4de75f4281c2d2e5f27ae26a9bac8e
e8cd84d92fbc852092a16a7e790ee76957285d3262cc793567daf3789697b1d8
2b2c06261f858f839442c8d0188884c0a8463b9ee8a2afde8621767d56fb8fb8
6dc70e6846a6967132dfccfbd42be668cde17f850935e61a31b5b291d1deca32
57f72190116ca550b8b39bc6af3697e9825813759e682a8346d9846d8cd3e6e7
6dd503b6461f7e54c9f53f431a002a87c5190f2c06e2bc10dc52985080d9bf55
565c6e414d5bcd7a15700b3f5f4dacf8af09ed89d5d02a550ad5697f558b18fe
ee6fee3f50162b343d8903759ca59b55e4e6b7dc8a95ee51b1dcb678567f2579
5c222b31e74c7b41c060d81ce8604bba52293ea97798f4e91fc9f992c73cfc89
31302def2696f815f24ba71c46ede1772707e0bff630bd3c9de6b512a09e7295
60b02916f86804f890de286580f0706169f8f30268258cad5af7885358da60b8
fb9637f33e6251136a00d0584a18d1ffea592aef9ec55238e94f117f790dcb91
95d800d3bf31fa6b885eb9e16e349fd2b69b47b670022948f4c4e8b84816ae7c
ffcdeb05bb31ddf738876243c9d702d86d9a684028ab9402e216b143106030f4
59b62d6edb929a11fc390127e024919b09f53f1a3cb37062c1a2ed8a87c3a4a5
bb6f072c594abaf71ba147d2b388a7fd6abd2530630d5879bd3f58c8e4125c75
3b6b0ca223cc40d79bafcc44f3dadcbd623c583741255d2670d9f85accdf840b
37a0f883294444f5e93a0d8a593047bb2d3207d215460159ce6431b1210a0975
7e2eaa6f62caf304e656f6164f2cd97dc8f3710e116140922d5fc181d7bbdaa2
ec82e4d9e03e40e056b8c281aa6bf09c285c0b44a30581db6ac317b83b631bd3
15daddec803a7ef39f9851ad5349a03ee785592b8a2bf768c0a22fc43b545ccc
8b768c27815820a6ea0c41c39621a6c5b62133c4dabc09bad678b2b07c7d5539
709870a0801d9752cd5ad920df43110873b70dbea8f88b5584f573ebc90f8407
0058803a3b49f42e59e9fb303607d79161b3bdfb7f0272d4ae7cd154f61af416
00616456471132a27872f0c1d6897d4c63c2668c933740d8bca79f00f89b9fbc
9713c8525d1f7174891de732fe5a91f8e1ed6cb487ac0ba7bc7cea7c1dcbff0e
9e099c4f110de4e000fdc502e65d15b2ca0c6057d6de7256128326783278db22
be48c147c191e6916edb3a6875e69ad2c8b3e9613c43778160015f566362d5b1
975fdde7779e189ef84898a248f804a5d5de38500a019aad77280d7b1c1b2fa5
e43489c90b5774d2906ef253da683a964390b179ebe2f653bcea006fd0ae4e0f
f21a806de32e9b0bcdff50ffd1693b6771f8fa69537d969701402461609922c0
0aac23b80af98b6a4971b9c32cb287b30676de59fca383615cbdf2b185fd1131
ca2f1e3cbbc6a416b004fd97a7001b9b260e8441ca7d83b539126a0e6e805cde
ad029d94df6ebaaf6699dafe4b04088c5115a2c68edb6c63f66365d257d9894b
012736dd90db4d5c597f1df92502721297d85ecd32393a46385a161ea1acab1b
5c0e3f666bceb135b696e41d75

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark%%EndResource
/F8_0 /AsanaMath 1 1
[ /.notdef/k/j/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
false pdfSetup
%%EndSetup
%%Page: 1 1
%%PageMedia: 157x89mm
%%PageBoundingBox: 0 0 447 255
%%PageOrientation: Portrait
%%BeginPageSetup
447 255 pdfSetupPaper
pdfStartPage
0 0 447 255 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[1 0 0 1 -64 -517] cm
q
[1 0 0 1 0 0] cm
0 0 595 842 re
W
0.1 w
q
0 0.1 595.2 841.8 re
W*
/DeviceRGB {} cs
[1 1 1] sc
0 0.1 595.2 841.9 re
f*
297.6 544.4 m
85 544.4 l
85 771.1 l
510.2 771.1 l
510.2 544.4 l
297.6 544.4 l
h
f*
/DeviceRGB {} CS
[0 0 0] SC
q
0 w
0 J
1 j
297.6 544.4 m
85 544.4 l
85 771.1 l
510.2 771.1 l
510.2 544.4 l
297.6 544.4 l
h
S
Q
q
0 w
0 J
1 j
113.4 771.1 m
113.4 544.4 l
S
Q
q
0 w
0 J
1 j
141.7 771.1 m
141.7 544.4 l
S
Q
q
0 w
0 J
1 j
170.1 771.1 m
170.1 544.4 l
S
Q
q
0 w
0 J
1 j
198.4 771.1 m
198.4 544.4 l
S
Q
q
0 w
0 J
1 j
226.8 771.1 m
226.8 544.4 l
S
Q
q
0 w
0 J
1 j
255.1 771.1 m
255.1 544.4 l
S
Q
q
0 w
0 J
1 j
283.5 771.1 m
283.5 544.4 l
S
Q
q
0 w
0 J
1 j
311.8 771.1 m
311.8 544.4 l
S
Q
q
0 w
0 J
1 j
340.2 771.1 m
340.2 544.4 l
S
Q
q
0 w
0 J
1 j
368.5 771.1 m
368.5 544.4 l
S
Q
q
0 w
0 J
1 j
396.9 771.1 m
396.9 544.4 l
S
Q
q
0 w
0 J
1 j
425.2 771.1 m
425.2 544.4 l
S
Q
q
0 w
0 J
1 j
453.5 771.1 m
453.5 544.4 l
S
Q
q
0 w
0 J
1 j
481.9 771.1 m
481.9 544.4 l
S
Q
q
0 w
0 J
1 j
85 657.7 m
510.2 657.7 l
S
Q
q
0 w
0 J
1 j
85 714.4 m
510.2 714.4 l
S
Q
q
0 w
0 J
1 j
85 601.1 m
510.2 601.1 l
S
Q
/DeviceRGB {} cs
[1 1 1] sc
297.6 657.7 m
283.5 657.7 l
283.5 714.4 l
311.8 714.4 l
311.8 657.7 l
297.6 657.7 l
h
f*
/DeviceRGB {} CS
[0 0 0] SC
q
5.66 w
0 J
1 j
297.6 657.7 m
283.5 657.7 l
283.5 714.4 l
311.8 714.4 l
311.8 657.7 l
297.6 657.7 l
h
S
Q
q
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
63.8 683.4 Td
/F8_0 16 Tf
(\001)
[8.88
0] Tj
Q
q
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
296.2 521.8 Td
/F8_0 16 Tf
(\002)
[3.728
0] Tj
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font AsanaMath
%%EOF
